resources:
  - name: distrolessGithubRepo
    type: GitRepo
    configuration:
      gitProvider: shahin_test
      path: shahiinn/jfrog-distroless
      branches:
        include: master
  - name: file_test
    type: FileSpec
    configuration:     
      sourceArtifactory: artifact_test
      pattern: testrepo1/distro-build.sh
      target: distro-build.sh
  - name: distrolessArtifactory
    type: BuildInfo
    configuration:
      sourceArtifactory: artifact_test
      buildName: DistrolessPipe
      buildNumber: 1
pipelines:
  - name: DistrolessPipe
    steps:
      - name: start
        type: Bash
        configuration:
          inputResources:
            - name: file_test
          outputResources:
            - name: distrolessGithubRepo
        execution:
          onExecute:
            - echo "Starting the build"
          onSuccess:
            - echo "Triggered the build"    
      - name: docker_build_redhat_ubi_rt7
        type: DockerBuild
        configuration:
          affinityGroup: image1
          dockerFileLocation: customize-example
          dockerFileName: Dockerfile.redhat-ubi-rt7
          dockerImageName: 'chartstesting-distroless-local.jfrog.io/artifactory-rh-ubi'
          dockerOptions: --build-arg ARTIFACTORY_BASE_VERSION=7.4.1
          dockerImageTag: ${run_number}
          inputResources:
            - name: distrolessGithubRepo
          integrations:
            - name: artifact_test    
      - name: docker_build_python
        type: DockerBuild
        configuration:
          affinityGroup: image2
          dockerFileLocation: customize-example
          dockerFileName: Dockerfile.python
          dockerImageName: 'chartstesting-distroless-local.jfrog.io/python'
          dockerImageTag: ${run_number}
          inputResources:
            - name: distrolessGithubRepo
          integrations:
            - name: artifact_test
      - name: docker_build_curl
        type: DockerBuild
        configuration:
          affinityGroup: image3
          dockerFileLocation: customize-example
          dockerFileName: Dockerfile.curl
          dockerImageName: 'chartstesting-distroless-local.jfrog.io/curl'
          dockerImageTag: ${run_number}
          inputResources:
            - name: distrolessGithubRepo
          integrations:
            - name: artifact_test
      - name: docker_build_distroless
        type: DockerBuild
        configuration:
          affinityGroup: image4
          dockerFileLocation: customize-example
          dockerFileName: Dockerfile.distroless
          dockerImageName: 'chartstesting-distroless-local.jfrog.io/distroless'
          dockerImageTag: ${run_number}
          inputResources:
            - name: distrolessGithubRepo
          integrations:
            - name: artifact_test
      - name: docker_build_redhat_ubi
        type: DockerBuild
        configuration:
          affinityGroup: image5
          dockerFileLocation: customize-example
          dockerFileName: Dockerfile.redhat-ubi
          dockerImageName: 'chartstesting-distroless-local.jfrog.io/redhat-ubi'
          dockerImageTag: ${run_number}
          inputResources:
            - name: distrolessGithubRepo
          integrations:
            - name: artifact_test    
      - name: DockerPush_redhat_ubi_rt7
        type: Bash
        configuration:
          affinityGroup: image1
          inputSteps:
            - name: docker_build_redhat_ubi_rt7
          outputResources:
            - name: distrolessArtifactory
          integrations:
            - name: artifact_test
        execution:
          onExecute:
            - echo "Starting the build"
            - curl -fL https://getcli.jfrog.io | sh
            - export JFROG_CLI_OFFER_CONFIG=false; ./jfrog rt docker-push chartstesting-distroless-local.jfrog.io/artifactory-rh-ubi:${run_number} distroless-local --build-name="DistrolessPipe" --build-number=${run_number} --server-id=chartstesting --url=${int_artifact_test_url} --user=${int_artifact_test_user} --password=${int_artifact_test_apikey}
      - name: DockerPush_python
        type: Bash
        configuration:
          affinityGroup: image2
          inputSteps:
            - name: docker_build_python
          integrations:
            - name: artifact_test
          outputResources:
            - name: distrolessArtifactory
        execution:
          onExecute:
            - echo "Starting the build"
            - curl -fL https://getcli.jfrog.io | sh
            - export JFROG_CLI_OFFER_CONFIG=false; ./jfrog rt docker-push chartstesting-distroless-local.jfrog.io/python:${run_number} distroless-local --build-name="DistrolessPipe" --build-number=${run_number} --server-id=chartstesting --url=${int_artifact_test_url} --user=${int_artifact_test_user} --password=${int_artifact_test_apikey}
      - name: DockerPush_curl
        type: Bash
        configuration:
          affinityGroup: image3
          inputSteps:
            - name: docker_build_curl
          integrations:
            - name: artifact_test
          outputResources:
            - name: distrolessArtifactory
        execution:
          onExecute:
            - echo "Starting the build"
            - curl -fL https://getcli.jfrog.io | sh
            - export JFROG_CLI_OFFER_CONFIG=false; ./jfrog rt docker-push chartstesting-distroless-local.jfrog.io/curl:${run_number} distroless-local --build-name="DistrolessPipe" --build-number=${run_number} --server-id=chartstesting --url=${int_artifact_test_url} --user=${int_artifact_test_user} --password=${int_artifact_test_apikey}
      - name: DockerPush_distroless
        type: Bash
        configuration:
          affinityGroup: image4
          inputSteps:
            - name: docker_build_distroless
          integrations:
            - name: artifact_test
          outputResources:
            - name: distrolessArtifactory
        execution:
          onExecute:
            - echo "Starting the build"
            - curl -fL https://getcli.jfrog.io | sh
            - export JFROG_CLI_OFFER_CONFIG=false; ./jfrog rt docker-push chartstesting-distroless-local.jfrog.io/distroless:${run_number} distroless-local --build-name="DistrolessPipe" --build-number=${run_number} --server-id=chartstesting --url=${int_artifact_test_url} --user=${int_artifact_test_user} --password=${int_artifact_test_apikey}
      - name: DockerPush_redhat_ubi
        type: Bash
        configuration:
          affinityGroup: image5
          inputSteps:
            - name: docker_build_redhat_ubi
          integrations:
            - name: artifact_test
          outputResources:
            - name: distrolessArtifactory
        execution:
          onExecute:
            - echo "Starting the build"
            - curl -fL https://getcli.jfrog.io | sh
            - export JFROG_CLI_OFFER_CONFIG=false; ./jfrog rt docker-push chartstesting-distroless-local.jfrog.io/redhat-ubi:${run_number} distroless-local --build-name="DistrolessPipe" --build-number=${run_number} --server-id=chartstesting --url=${int_artifact_test_url} --user=${int_artifact_test_user} --password=${int_artifact_test_apikey}            
      - name: BuildPublish_redhat_ubi_rt7
        type: PublishBuildInfo
        configuration:
          forceXrayScan: true
          inputSteps:
            - name: DockerPush_redhat_ubi_rt7
          outputResources:
            - name: distrolessArtifactory
      - name: BuildPublish_python
        type: PublishBuildInfo
        configuration:
          forceXrayScan: true
          inputSteps:
            - name: DockerPush_python
          outputResources:
            - name: distrolessArtifactory
      - name: BuildPublish_curl
        type: PublishBuildInfo
        configuration:
          forceXrayScan: true
          inputSteps:
            - name: DockerPush_curl
          outputResources:
            - name: distrolessArtifactory            
      - name: BuildPublish_distroless
        type: PublishBuildInfo
        configuration:
          forceXrayScan: true
          inputSteps:
            - name: DockerPush_distroless
          outputResources:
            - name: distrolessArtifactory            
      - name: BuildPublish_redhat_ubi
        type: PublishBuildInfo
        configuration:
          forceXrayScan: true
          inputSteps:
            - name: DockerPush_redhat_ubi
          outputResources:
            - name: distrolessArtifactory            
#      - name: DockerRun_1
#        type: Bash
#        configuration:
#          inputSteps:
#            - name: BuildPublish_1
#        execution:
#          onExecute:   
#            - docker run -it 
